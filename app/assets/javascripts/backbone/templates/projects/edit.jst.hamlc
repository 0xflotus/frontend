.row
  .span6.offset4.alert-message.block-message.info
    We aim to build your projects automatically. As I'm sure you can imagine,
    this won't work in some cases, so you can edit your build manually as a
    fallback mechanism. We'll monitor these settings to automatically infer them
    in the future, and to build our product around the tools you really use.

    %br
    %br

    Enter a list of commands for each "build phase". Each line is a separate
    program invocation, and any failing program (with a non-zero exit code),
    will stop the build. Each command is arbitrary bash, so you can use
    environmental variables, pipes, redirection, etc. If you customize one
    phase, you need to fill them all in (fix coming soon).

    %br
    %br

    All commands are run on Ubuntu 11.04 - please contact us if you need something else.

.row
  .span10.offset2

    %form.edit_spec{ accept-charset: "UTF-8", action: "/gh/#{ @get 'project' }" }


      %fieldset.form-stacked
        %legend Project settings

        .clearfix#spec_setup_input
          %label{ for: "spec_setup" }
            Machine image setup
          .input
            %textarea.xxlarge#spec_setup{ cols: 40, name: "spec[setup]", rows: 10 }
              = @get "setup"

        %span.help-block
          Commands to set up your box. Most dependencies should already be
          installed, but you can
          %code<
            sudo apt-get -y install
          those that aren't (don't forget the
          %code<
            \-y
          though)!

        %input.btn.primary{ name: "commit", type: "submit", value: "Save and test" }



      %fieldset.form-stacked

        .clearfix#spec_dependencies_input
          %label{ for: "spec_dependencies" }
            Project dependencies
          .input
            %textarea.xxlarge#spec_dependencies{ cols: 40, name: "spec[dependencies]", rows: 10 }
              = @get "dependencies"

        %span.help-block
          Commands to install your project's libraries and
          dependencies. For example,
          %code<
            bundle install
          for Rails or
          %code<
            lein deps
          for Clojure.

        %input.btn.primary{ name: "commit", type: "submit", value: "Save and test" }



      %fieldset.form-stacked

        .clearfix#spec_compile_input
          %label{ for: "spec_compile" }
            Compile
          .input
            %textarea.xxlarge#spec_compile{ cols: 40, name: "spec[compile]", rows: 10 }
              = @get "compile"

        %span.help-block

          Commands to compile your code, for example
          <code>configure</code>,
          <code>make</code>,
          <code>ant build</code>,
          You can usually ignore this for interpreted languages.

        %input.btn.primary{ name: "commit", type: "submit", value: "Save and test" }



      %fieldset.form-stacked

        .clearfix#spec_test_input
          %label{ for: "spec_test" }
            Test
          .input
            %textarea.xxlarge#spec_test{ cols: 40, name: "spec[test]", rows: 10 }
              = @get "test"

        %span.help-block
          Command to test your code. For example,
          <code>rake test</code>,
          <code>rspec spec</code>,
          <code>make check</code>.

        %input.btn.primary{ name: "commit", type: "submit", value: "Save and test" }

-# -# .span6.offset0.alert-message.block-message.info

-# -#   We aim to build your projects automatically. As I'm sure you can
-# -#   imagine, this won't work in some cases, so you can edit your build
-# -#   manually as a fallback mechanism. We'll monitor these settings to
-# -#   automatically infer them in the future, and to build our product around
-# -#   the tools you really use.
-# -#    %br
-# -#   %br

-# -#   Enter a list of commands for each "build phase". Each line is a separate
-# -#   program invocation, and any failing program (with a non-zero exit code),
-# -#   will stop the build. Each command is arbitrary bash, so you can use
-# -#   environmental variables, pipes, redirection, etc. If you customize one
-# -#   phase, you need to fill them all in (fix coming soon).

-# -#   %br
-# -#   %br

-# -#   All commands are run on Ubuntu 11.04 - please contact us if you need something else.
