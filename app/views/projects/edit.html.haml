.container
  .content
    .row
      .span6.offset4.alert-message.block-message.info
        We aim to build your projects automatically. As I'm sure you can
        imagine, this won't work in some cases, so you can edit your build
        manually as a fallback mechanism. We'll monitor these settings to
        automatically infer them in the future, and to build our product around
        the tools you really use.

        %br
        %br

        Enter a list of commands for each "build phase". Each line is a separate
        program invocation, and any failing program (with a non-zero exit code),
        will stop the build. Each command is arbitrary bash, so you can use
        environmental variables, pipes, redirection, etc. If you customize one
        phase, you need to fill them all in (fix coming soon).

        %br
        %br

        All commands are run on Ubuntu 11.04 - please contact us if you need something else.

    .row
      .span10.offset2
        - @specs.each do |s|
          = twitter_bootstrap_form_for s, :url => github_project_update_path do |f|
            = f.inputs "Project settings", :class => 'form-stacked' do



              = f.text_area :setup, 'Machine image setup', :value => s.setup, :class => "xxlarge", :rows => 10
              %span.help-block
                Commands to set up your box. Most dependencies should already be
                installed, but you can
                %code
                  sudo apt-get -y install
                those that aren't (don't forget the
                %code
                  \-y
                though)!
              = f.submit "Save and test", :class => "btn primary"



            = f.inputs "", :class => 'form-stacked' do
              = f.text_area :dependencies, 'Project dependencies', :value => s.dependencies, :class => "xxlarge", :rows => 10
              %span.help-block
                Commands to install your project's libraries and
                dependencies. For example,
                %code
                  bundle install
                for Rails or
                %code
                  lein deps
                for Clojure. We'll cache these steps so to make them fast.
              = f.submit "Save and test", :class => "btn primary"



            = f.inputs "", :class => 'form-stacked' do
              = f.text_area :compile, :value => s.compile, :class => "xxlarge", :rows => 10
              %span.help-block
                Commands to compile your code, for example
                = succeed "," do
                  %code
                    configure
                = succeed "," do
                  %code
                    make
                or
                = succeed "." do
                  %code
                    ant build
                You can usually ignore this for interpreted languages.
              = f.submit "Save and test", :class => "btn primary"




            = f.inputs "", :class => 'form-stacked' do
              = f.text_area :test, :value => s.test, :class => "xxlarge", :rows => 10
              %span.help-block
                Commands to test your code. For example,
                = succeed "," do
                  %code
                    rake test
                = succeed "," do
                  %code
                    rspec spec
                = succeed "," do
                  %code
                    make check
                etc.

              = f.submit "Save and test", :class => "btn primary"
