(ns frontend.components.common
  (:require [cljs.core.async :as async :refer [>! <! alts! chan sliding-buffer close!]]
            [frontend.async :refer [put!]]
            [frontend.datetime :as datetime]
            [frontend.utils :as utils :include-macros true]
            [frontend.utils.github :as gh-utils]
            [goog.dom.DomHelper]
            [om.core :as om :include-macros true]
            [om.dom :as dom :include-macros true])
  (:require-macros [frontend.utils :refer [html]]))

(defn contact-us-inner [controls-ch]
  [:a {:on-click #(put! controls-ch [:intercom-dialog-raised])}
   "contact us"])

(defn flashes
  "Displays common error messages (poorly named since flashes has another use in the app)."
  [error-message owner]
  (reify
    om/IRender
    (render [_]
      (let [controls-ch (om/get-shared owner [:comms :controls])
            ;; use error messages that have html without passing html around
            display-message (condp = error-message
                              :logged-out [:span "You've been logged out, " [:a {:href (gh-utils/auth-url)} "log back in"] " to continue."]
                              error-message)]
        (html
         (if-not error-message
           [:span]

           [:div.flash-error-wrapper.row-fluid
            [:div.offset1.span10
             [:div.alert.alert-block.alert-danger
              [:a.close {:on-click #(put! controls-ch [:clear-error-message-clicked])} "Ã—"]
              "Error: " display-message
              " If we can help, " (contact-us-inner controls-ch) "."]]]))))))

(defn normalize-html
  "Creates a valid html string given a (possibly) invalid html string."
  [html-string]
  (let [dom-helper (goog.dom.DomHelper.)]
    (->> html-string
         (.htmlToDocumentFragment dom-helper)
         (.getOuterHtml dom-helper))))

(defn messages [messages]
  [:div.row-fluid
   (when (pos? (count messages))
     (let [dom-helper (goog.dom.DomHelper.)]
       [:div#build-messages.offset1.span10
        (map (fn [message]
               [:div.alert.alert-info
                [:strong "Warning: "]
                [:span {:dangerouslySetInnerHTML #js {"__html" (normalize-html (:message message))}}]])
             messages)]))])

;; TODO: Why do we have ico and icon?
(def ico-paths
  {:turn "M50,0C26.703,0,7.127,15.936,1.576,37.5c-0.049,0.191-0.084,0.389-0.084,0.595c0,1.315,1.066,2.381,2.381,2.381h20.16c0.96,0,1.783-0.572,2.159-1.391c0,0,0.03-0.058,0.041-0.083C30.391,30.033,39.465,23.809,50,23.809c14.464,0,26.19,11.726,26.19,26.19c0,14.465-11.726,26.19-26.19,26.19c-10.535,0-19.609-6.225-23.767-15.192c-0.011-0.026-0.041-0.082-0.041-0.082c-0.376-0.82-1.199-1.392-2.16-1.392H3.874c-1.315,0-2.381,1.066-2.381,2.38c0,0.206,0.035,0.406,0.084,0.597C7.127,84.063,26.703,100,50,100c27.614,0,50-22.387,50-50C100,22.385,77.614,0,50,0z"
   :slim_turn "M7.5,65c6.2,17.5,22.8,30,42.4,30c24.9,0,45-20.1,45-45c0-24.9-20.1-45-45-45C30.3,5,13.7,17.5,7.5,35"
   :circle "M38.096000000000004,50a11.904,11.904 0 1,0 23.808,0a11.904,11.904 0 1,0 -23.808,0"
   :check "M65.151,44.949L51.684,58.417l-3.367,3.367c-0.93,0.93-2.438,0.93-3.367,0l-3.368-3.367l-6.734-6.733 c-0.93-0.931-0.93-2.438,0-3.368l3.368-3.367c0.929-0.93,2.437-0.93,3.367,0L46.633,50l11.785-11.785 c0.931-0.929,2.438-0.929,3.367,0l3.366,3.367C66.082,42.511,66.082,44.019,65.151,44.949z"
   :times "M61.785,55.051L56.734,50l5.051-5.05c0.93-0.93,0.93-2.438,0-3.368l-3.367-3.367c-0.93-0.929-2.438-0.929-3.367,0L50,43.265l-5.051-5.051c-0.93-0.929-2.437-0.929-3.367,0l-3.367,3.367c-0.93,0.93-0.93,2.438,0,3.368l5.05,5.05l-5.05,5.051c-0.93,0.929-0.93,2.438,0,3.366l3.367,3.367c0.93,0.93,2.438,0.93,3.367,0L50,56.734l5.05,5.05c0.93,0.93,2.438,0.93,3.367,0l3.367-3.367C62.715,57.488,62.715,55.979,61.785,55.051z"
   :slim_circle "M49.5,50a0.5,0.5 0 1,0 1,0a0.5,0.5 0 1,0 -1,0"
   :slim_check "M35,80 L5,50 M95,20L35,80"
   :slim_times "M82.5,82.5l-65-65 M82.5,17.5l-65,65"
   :slim_clock "M7.5,35C13.7,17.5,30.3,5,49.9,5c24.9,0,45,20.1,45,45c0,24.9-20.1,45-45,45C30.3,95,13.7,82.5,7.5,65 M50,20v30 M50,50h20"
   :slim_ban "M95,50 c0,24.9-20.1,45-45,45S5,74.9,5,50S25.1,5,50,5S95,25.1,95,50z M18.2,81.8l63.6-63.6"
   :slim_settings "M94.8,54.3c-0.3,2.1-1.9,3.8-3.9,4c-2.5,0.3-7.7,0.9-7.7,0.9c-2.3,0.5-3.9,2.5-3.9,4.9c0,1,0.3,2,0.8,2.7c0,0.1,3.1,4.1,4.7,6.2 c1.3,1.6,1.2,3.9-0.1,5.5c-1.8,2.3-3.8,4.3-6.1,6.1c-0.8,0.7-1.8,1-2.8,1c-0.9,0-2-0.3-2.7-0.9L67,80.1c-0.7-0.6-1.8-0.8-2.8-0.8 c-2.4,0-4.4,1.8-4.9,4.1l-0.9,7.5c-0.3,2.1-2,3.7-4,3.9C52.9,94.9,51.4,95,50,95c-1.4,0-2.9-0.1-4.3-0.2c-2.1-0.3-3.7-1.9-4-3.9 c0,0-0.9-7.4-0.9-7.5c-0.4-2.3-2.4-4.1-4.9-4.1c-1.1,0-2.2,0.4-3,0.9L27,84.8c-0.7,0.7-1.8,0.9-2.7,0.9c-1,0-2-0.4-2.8-1 c-2.3-1.8-4.3-3.8-6.1-6.1c-1.3-1.6-1.4-3.9-0.1-5.5l4.5-5.9c0.7-0.8,1-1.9,1-3c0-2.5-1.9-4.6-4.3-4.9l-7.3-0.9 c-2.1-0.3-3.7-2-3.9-4c-0.3-2.8-0.3-5.7,0-8.6c0.2-2.1,1.9-3.7,3.9-4l7.3-0.9c2.4-0.4,4.3-2.4,4.3-5c0-1-0.4-2.1-1-2.9 c0,0-3-3.9-4.5-5.9c-1.3-1.6-1.3-3.9,0.1-5.5c1.8-2.3,3.8-4.3,6.1-6.1c1.6-1.3,3.9-1.4,5.5-0.1l5.9,4.6c0.8,0.6,1.9,0.9,3,0.9 c2.4,0,4.5-1.8,4.9-4.1l0.9-7.5c0.3-2.1,2-3.7,4-3.9c2.8-0.3,5.7-0.3,8.6,0c2.1,0.3,3.7,1.9,4,3.9l0.9,7.5c0.5,2.3,2.4,4.1,4.9,4.1 c1,0,2-0.4,2.8-0.8c0,0,4-3.1,6.1-4.7c1.6-1.3,3.9-1.2,5.5,0.1c2.3,1.8,4.3,3.8,6.1,6.1c1.3,1.6,1.4,3.9,0.1,5.5 c0,0-4.7,6.1-4.7,6.2c-0.6,0.7-0.8,1.7-0.8,2.6c0,2.4,1.7,4.4,3.9,5c0,0,5.2,0.7,7.7,0.9c2.1,0.3,3.7,2,3.9,4 C95.1,48.5,95.1,51.4,94.8,54.3z"
   :clock "M59.524,47.619h-7.143V30.952c0-1.315-1.066-2.381-2.381-2.381c-1.315,0-2.381,1.065-2.381,2.381V50c0,1.315,1.066,2.38,2.381,2.38h9.524c1.314,0,2.381-1.065,2.381-2.38S60.839,47.619,59.524,47.619z"
   :chevron_down "M90.4,21.3l-45,45l-45-45"
   :slim_arrow_right "M53.6,17.5L86.1,50L53.6,82.5 M13.9,50h72.2"
   :slim_django "M46.8,5h14.7v68.1c-7.5,1.4-13.1,2-19.1,2 c-18,0-27.3-8.1-27.3-23.7c0-15,9.9-24.7,25.3-24.7c2.4,0,4.2,0.2,6.4,0.8L46.8,5L46.8,5z M46.8,39.3c-1.7-0.6-3.2-0.8-5-0.8 c-7.5,0-11.8,4.6-11.8,12.6c0,7.8,4.1,12.1,11.7,12.1c1.6,0,3-0.1,5.1-0.4C46.8,62.9,46.8,39.3,46.8,39.3z M84.9,27.7v34.1 c0,11.8-0.9,17.4-3.4,22.3c-2.4,4.7-5.5,7.6-12,10.9l-13.7-6.5c6.5-3.1,9.7-5.7,11.7-9.8c2.1-4.2,2.8-9.1,2.8-21.9V27.7H84.9z M70.2,5.1h14.7v15.1H70.2V5.1z"
   :slim_ruby "M92.9,34.2L92.9,34.2c-2,6.3-4.8,12-8.3,17.4 c-4.6,7.1-10.2,13.6-16.1,19.8v0c-6.4,6-13.2,11.5-20.7,15.7c-7.2,4-15.2,6.8-24.2,7.7v0c-3.6-0.1-10.3-0.2-14.6-5.2 C6.8,86.8,5.2,82.8,5,76.8l1.2-25.6c3.6-6.7,10.7-21.3,11.1-21.5c0.4-0.2,12.4-11.6,18.6-17.3l19.7-7.1l24.9,0.1 c8.4,1.4,12.4,6,13.8,11.5C95.8,22.4,94.7,28.9,92.9,34.2z M84.6,51.6L90,90.2 M90,90.2L68.6,71.4 M47.9,87L90,90.2 M90,90.2 l4.8-64.4 M90,90.2l-66.4,4.5 M11.7,60.2c6.4,6.5,22.9-1.5,35.9-14.4s19.7-28.6,13.3-35c-6.4-6.5-23.1,1.1-36.1,14 C11.9,37.6,5.3,53.7,11.7,60.2z M5,76.8l6.2-11.4L6.2,51.2 M23.6,94.7L11.2,65.4L9.1,89.5 M47.9,87L34,60.4L23.6,94.7 M34,60.4 l34.6,11l-8.8-35 M92.9,34.2l-33.1,2.2l24.9,15.2 M94.4,16.9L66.8,13l26.1,21.2 M55.6,5.3L66.8,13l13.8-7.6 M11.2,65.4l22.8-5 l25.8-24.1L66.8,13"
   :slim_python "M37.9,11.6c2.2,0,4,1.8,4,4.1c0,2.3-1.8,4.1-4,4.1 c-2.2,0-4-1.8-4-4.1C33.8,13.4,35.6,11.6,37.9,11.6z M62,79.7c2.2,0,4,1.8,4,4.1c0,2.3-1.8,4.1-4,4.1c-2.2,0-4-1.8-4-4.1 C58,81.5,59.8,79.7,62,79.7z M49.9,27.9H28.5 M71.4,71.5H49.5 M92.9,38.8c-1.5-6.2-4.5-10.9-10.7-10.9H71.4V17 c0-5.8-4.9-10.2-10.7-11.2C57,5.3,53.1,5,49.5,5c-3.7,0-7.2,0.3-10.3,0.9c-9.1,1.6-10.7,5-10.7,11.2v10.9h-8.1 c-6.2,0-11.7,3.8-13.4,10.9C5,47,4.9,52.1,7,60.7c1.5,6.4,5.2,10.9,11.4,10.9h10.1v10.9c0,5.8,5.1,9.2,10.7,10.9 c6.8,2,13.3,2.4,21.4,0c5.4-1.6,10.7-4.7,10.7-10.9V71.5h10.7c6.2,0,8.6-4.4,10.7-10.9C95.1,53.9,95,47.5,92.9,38.8z M28.5,71.5V71 c0-11.6,9.4-21,21-21h0h0h0c12.1,0,21.9-9.8,21.9-21.9v-0.1"
   :slim_js "M5,5v90h90V5H5z M52.4,82.1c-1.3,2.7-3.9,4.5-6.8,5.3 c-4.5,1-8.8,0.4-12-1.5c-2.1-1.3-3.8-3.3-5-5.7c2.3-1.4,4.6-2.8,6.8-4.2c0.1,0,0.2,0.4,0.5,0.8c0.9,1.5,1.6,2.5,3.1,3.2 c1.5,0.5,4.6,0.8,5.9-1.7c0.8-1.3,0.5-5.5,0.5-10.2c0-7.3,0-14.5,0-21.8h8.4c0,7.7,0,15.5,0,23.2C53.9,74.3,54.4,78.5,52.4,82.1z M87.4,79.7c-2.9,10-19.2,10.3-25.8,3.7c-1.4-1.6-2.2-2.4-3.1-4.2c3.5-2,3.5-2,6.8-3.9c1.8,2.8,3.5,4.4,6.6,5 c4.1,0.5,8.3-0.9,7.4-5.3c-1-3.6-8.5-4.5-13.6-8.3c-5.2-3.5-6.4-11.9-2.1-16.8c1.4-1.8,3.8-3.1,6.4-3.8c0.9-0.1,1.8-0.2,2.7-0.3 c5.1-0.1,8.3,1.2,10.6,3.8c0.7,0.7,1.2,1.4,2.2,2.9c-2.7,1.7-2.7,1.7-6.6,4.2c-0.8-1.8-2.2-2.9-3.7-3.4c-2.3-0.7-5.1,0.1-5.7,2.4 c-0.2,0.7-0.2,1.4,0.2,2.6c0.9,2.1,4,3,6.7,4.3C84.3,66,87,69.4,87.6,73.5C88.3,77.1,87.5,79.4,87.4,79.7z"
   :slim_php "M86.4,44.5c0.9,1,1.2,2.8,0.7,5.3c-0.5,2.6-1.5,4.5-3,5.6 c-1.5,1.1-3.7,1.7-6.7,1.7h-4.5l2.8-14.2h5.1C83.5,42.9,85.4,43.4,86.4,44.5z M23,42.9H18l-2.8,14.2h4.5c3,0,5.2-0.6,6.7-1.7 s2.4-3,3-5.6c0.5-2.5,0.3-4.3-0.7-5.3C27.7,43.4,25.8,42.9,23,42.9z M32.3,58.6c-1.5,1.4-3.1,2.4-4.9,3c-1.8,0.6-4.1,0.9-6.9,0.9 h-6.3l-1.8,9H5l6.6-33.9h14.2c4.3,0,7.4,1.1,9.4,3.4c2,2.2,2.6,5.4,1.8,9.4c-0.3,1.7-0.9,3.2-1.6,4.5 C34.5,56.2,33.5,57.5,32.3,58.6z M54.9,62.5l2.9-15c0.3-1.7,0.2-2.9-0.4-3.5c-0.6-0.6-1.8-0.9-3.7-0.9h-5.9l-3.8,19.4h-7.3 l6.6-33.9h7.3l-1.8,9h6.5c4.1,0,6.9,0.7,8.5,2.2c1.6,1.4,2,3.8,1.4,7l-3.1,15.8H54.9z M94.7,50.3c-0.3,1.7-0.9,3.2-1.6,4.5 c-0.8,1.4-1.8,2.6-3,3.8c-1.5,1.4-3.1,2.4-4.9,3c-1.8,0.6-4.1,0.9-6.9,0.9h-6.3l-1.8,9h-7.4l6.6-33.9h14.2c4.3,0,7.4,1.1,9.4,3.4 C94.9,43.2,95.4,46.3,94.7,50.3z"
   :slim_java "M53,57.5c0,0,11-5.7,6-12.8c-4.7-6.6-8.4-9.9,11.3-21.3 M59,5c3.8,14.9-13.3,19.3-19.5,28.6c-4.2,6.3,2.1,13.1,10.6,20.8 M59,5 M38.2,74.6c-13.8,3.9,8.4,11.9,26,4.3 M38.2,74.6 M36,64.7 c-15.2,5.1,8.5,10.8,29.8,4.6 M36,64.7 M31.2,81.6c-3.6-2.5-23.1,4.9-9.9,7.1c35.9,5.8,65.5-2.6,56.2-6.8 M77.5,81.9 M39.8,54.5 c0,0-6.3-0.4-14.2,3.3c-9.2,4.5,22.9,6.5,39.5,2.1 M39.8,54.5 M68.8,71.4c22.6-5.9,14.3-20.9,3.5-17.1c-0.9,0.3-1.4,1.1-1.4,1.1 M28.8,92.3c0,0,2.1,1.7,12.7,2.4c16.2,1,41.1-0.6,41.7-8.3"
   :slim_rails "M53.5,65l6.4,2.9l-0.7-4.6l-5.8-3.1L53.5,65z M5,80.3 l8.3,0.9l1.8-7.7l-8-1.4L5,80.3z M34.6,26.7l-5.4-4l-3.8,5.2l6,3.7L34.6,26.7z M51.3,13.2l-3.5-4.6l-4.9,2.9l4.1,4.4L51.3,13.2z M69.3,10l-1.1-3.7l-5.9-0.5L64,9.8L69.3,10z M22.1,47.7l-6.8-3L13,51.5l7,2.6L22.1,47.7z M56,44.7l-1.2,4.2l4.4,4l1.1-3.9L56,44.7 z M68.9,11.9C51.3,11.1,20,27.7,15.5,94.2h42.9c-9.6-24.9-8.5-43.8-1.9-56.5c9.6-18.5,24-19.8,37.3-12c0.5-1.1,1.1-2.5,1.1-2.5 C87.4,15.9,80.2,12.5,68.9,11.9z M70.1,25.7l1.6,3.8l3-1.6l-1.1-3.5L70.1,25.7z M60.4,34.4l3.3,4.5l2-2.9l-2.8-4.4L60.4,34.4z M65.4,86.4l-2-4.9L56,80.2l2,5.6L65.4,86.4z"
   :slim_node "M36.2,34.4v35.4c0,6.5-3.6,10.3-9.8,10.3 c-1.9,0-3.4,0-7.6-2.1l-5.3-3c-2.1-1.2-3.5-3.5-3.5-6V31c0-2.5,1.3-4.8,3.5-6l33-19.1c2.1-1.2,4.9-1.2,6.9,0l33,19.1 c2.1,1.2,3.5,3.5,3.5,6V69c0,2.5-1.3,4.8-3.5,6l-33,19C52.4,94.7,51.2,95,50,95c-1.2,0-2.4-0.3-3.5-0.9l-11-6.5 M45.8,55.6 c0,6.5,4.5,10.3,13,10.3c11,0,14.5-3,14.5-8.3C73.3,53,68,50,60.1,50c-7.2,0-12.9-1.9-12.9-7.2c0-4.5,2.6-7.6,11.7-7.6 c11.9,0,13.4,5.6,13.4,9.7"
   :github "M50.2,0.2c-27.6,0-50,22.4-50,50c0,22.1,14.3,40.8,34.2,47.4c2.5,0.5,3.4-1.1,3.4-2.4c0-1.2,0-5.1-0.1-9.3 c-13.9,3-16.8-5.9-16.8-5.9c-2.3-5.8-5.6-7.3-5.6-7.3c-4.5-3.1,0.3-3,0.3-3c5,0.4,7.7,5.2,7.7,5.2c4.5,7.6,11.7,5.4,14.6,4.2 c0.4-3.2,1.7-5.4,3.2-6.7C30,71.1,18.3,66.8,18.3,47.6c0-5.5,2-9.9,5.2-13.4C23,33,21.3,27.9,24,21c0,0,4.2-1.3,13.8,5.1 c4-1.1,8.3-1.7,12.5-1.7c4.2,0,8.5,0.6,12.5,1.7c9.5-6.5,13.7-5.1,13.7-5.1c2.7,6.9,1,12,0.5,13.2c3.2,3.5,5.1,8,5.1,13.4 c0,19.2-11.7,23.4-22.8,24.7c1.8,1.6,3.4,4.6,3.4,9.3c0,6.7-0.1,12.1-0.1,13.7c0,1.3,0.9,2.9,3.4,2.4c19.9-6.6,34.2-25.4,34.2-47.4 C100.2,22.6,77.9,0.2,50.2,0.2z"
   :repo "M44.4,27.5h-5.6v5.6h5.6V27.5z M44.4,16.2h-5.6v5.6h5.6V16.2z M78.1,5H21.9c0,0-5.6,0-5.6,5.6 v67.5c0,5.6,5.6,5.6,5.6,5.6h11.2V95l8.4-8.4L50,95V83.8h28.1c0,0,5.6-0.1,5.6-5.6V10.6C83.8,5,78.1,5,78.1,5z M78.1,72.5 c0,5.4-5.6,5.6-5.6,5.6H50v-5.6H33.1v5.6h-5.6c-5.6,0-5.6-5.6-5.6-5.6v-5.6h56.2V72.5z M78.1,61.2h-45V10.6h45.1L78.1,61.2z M44.4,50h-5.6v5.6h5.6V50z M44.4,38.8h-5.6v5.6h5.6V38.8z"})

(def ico-templates
  {:logo {:paths [:turn :circle]}
   :pass {:paths [:turn :check]}
   :fail {:paths [:turn :times]}
   :queued {:paths [:turn :clock]}
   :logo-light {:paths [:slim_turn :slim_circle]}
   :busy-light {:paths [:slim_turn :slim_circle]}
   :pass-light {:paths [:slim_check]}
   :fail-light {:paths [:slim_times]}
   :hold-light {:paths [:slim_clock]}
   :stop-light {:paths [:slim_ban]}
   :settings-light {:paths [:slim_settings :slim_circle]}
   :none-light {:paths [:slim_circle]}
   :chevron-down {:paths [:chevron_down]}
   :slim-arrow-right {:paths [:slim_arrow_right]}
   :slim-django {:paths [:slim_django]}
   :slim-ruby {:paths [:slim_ruby]}
   :slim-python {:paths [:slim_python]}
   :slim-js {:paths [:slim_js]}
   :slim-php {:paths [:slim_php]}
   :slim-java {:paths [:slim_java]}
   :slim-rails {:paths [:slim_rails]}
   :slim-node {:paths [:slim_node]}
   :github {:paths [:github]}
   :repo {:paths [:repo]}
   :spinner {:paths [:turn :circle]}})

(defn ico [ico-name]
  (let [template (get ico-templates ico-name)]
    [:i {:class "ico"}
      [:svg {:xmlns "http://www.w3.org/2000/svg" :viewBox "0 0 100 100"
             :class (name ico-name)
             :dangerouslySetInnerHTML
             #js {"__html" (apply str
                                  (for [path (:paths template)]
                                    (str "<path class='" (name path) "' fill='none' d='" (get ico-paths path) "'></path>")))}}]]))

(def spinner
  (ico :spinner))

;; TODO: why do we have ico and icon?
(def icon-shapes
  {:turn {:path "M50,0C26.703,0,7.127,15.936,1.576,37.5c-0.049,0.191-0.084,0.389-0.084,0.595c0,1.315,1.066,2.381,2.381,2.381h20.16c0.96,0,1.783-0.572,2.159-1.391c0,0,0.03-0.058,0.041-0.083C30.391,30.033,39.465,23.809,50,23.809c14.464,0,26.19,11.726,26.19,26.19c0,14.465-11.726,26.19-26.19,26.19c-10.535,0-19.609-6.225-23.767-15.192c-0.011-0.026-0.041-0.082-0.041-0.082c-0.376-0.82-1.199-1.392-2.16-1.392H3.874c-1.315,0-2.381,1.066-2.381,2.38c0,0.206,0.035,0.406,0.084,0.597C7.127,84.063,26.703,100,50,100c27.614,0,50-22.387,50-50C100,22.385,77.614,0,50,0z"}
   :circle {:path "" :cx "50" :cy "50" :r "11.904"}
   :pass {:path "M65.151,44.949L51.684,58.417l-3.367,3.367c-0.93,0.93-2.438,0.93-3.367,0l-3.368-3.367l-6.734-6.733 c-0.93-0.931-0.93-2.438,0-3.368l3.368-3.367c0.929-0.93,2.437-0.93,3.367,0L46.633,50l11.785-11.785 c0.931-0.929,2.438-0.929,3.367,0l3.366,3.367C66.082,42.511,66.082,44.019,65.151,44.949z"}
   :fail {:path "M61.785,55.051L56.734,50l5.051-5.05c0.93-0.93,0.93-2.438,0-3.368l-3.367-3.367c-0.93-0.929-2.438-0.929-3.367,0L50,43.265l-5.051-5.051c-0.93-0.929-2.437-0.929-3.367,0l-3.367,3.367c-0.93,0.93-0.93,2.438,0,3.368l5.05,5.05l-5.05,5.051c-0.93,0.929-0.93,2.438,0,3.366l3.367,3.367c0.93,0.93,2.438,0.93,3.367,0L50,56.734l5.05,5.05c0.93,0.93,2.438,0.93,3.367,0l3.367-3.367C62.715,57.488,62.715,55.979,61.785,55.051z"}
   :clock {:path "M59.524,47.619h-7.143V30.952c0-1.315-1.066-2.381-2.381-2.381c-1.315,0-2.381,1.065-2.381,2.381V50c0,1.315,1.066,2.38,2.381,2.38h9.524c1.314,0,2.381-1.065,2.381-2.38S60.839,47.619,59.524,47.619z"}})

(defn icon [{icon-type :type icon-name :name}]
  [:svg {:class (str "icon-" (name icon-name))
         :xmlns "http://www.w3.org/2000/svg"
         :viewBox "0 0 100 100"
         :dangerouslySetInnerHTML
         #js {"__html" (apply str (concat
                                   (when (= :status icon-type)
                                     [(str "<path class='" (name icon-name) "' fill='none'"
                                           " d='" (get-in icon-shapes [:turn :path]) "'></path>")])
                                   [(str "<path class='" (name icon-name) "' fill='none'"
                                         " d='" (get-in icon-shapes [icon-name :path]) "'></path>")]))}}])

(defn updating-duration
  "Takes a :start time string and :stop time string. Updates the component every second
   if the stop-time is nil.
   By default, uses datetime/as-duration, but can also take a custom :formatter
   function in opts."
  [{:keys [start stop]} owner opts]
  (reify
    om/IDisplayName (display-name [_] "Updating Duration")
    om/IInitState
    (init-state [_]
      {:watcher-uuid (utils/uuid)
       :now (datetime/server-now)
       :has-watcher? false})
    om/IDidMount
    (did-mount [_]
      (when-not stop
        (let [timer-atom (om/get-shared owner [:timer-atom])
              uuid (om/get-state owner [:watcher-uuid])]
          (add-watch timer-atom uuid (fn [_k _r _p t]
                                       (om/set-state! owner [:now] t)))
          (om/set-state! owner [:has-watcher?] true))))
    om/IWillUnmount
    (will-unmount [_]
      (when (om/get-state owner [:has-watcher?])
        (remove-watch (om/get-shared owner [:timer-atom])
                      (om/get-state owner [:watcher-uuid]))))

    om/IDidUpdate
    (did-update [_ _ _]
      (when (and stop (om/get-state owner [:has-watcher?]))
        (remove-watch (om/get-shared owner [:timer-atom])
                      (om/get-state owner [:watcher-uuid]))))
    om/IRenderState
    (render-state [_ {:keys [now]}]
      (let [end-ms (if stop
                     (.getTime (js/Date. stop))
                     now)
            formatter (get opts :formatter datetime/as-duration)
            duration-ms (- end-ms (.getTime (js/Date. start)))]
        (dom/span nil (formatter duration-ms))))))
