%article
  .title
    %h1 Getting Started with Circle
      %i.icon-cogs
    %p Last Updated: May 28, 2012
    %hr

  .doc
    %h1.section
      %a#overview Overview
    %hr

    %p
      For about 90% of web apps, setting up Continous Integration with Circle is a matter of 3 mouse clicks.
      We detect your project's configuration, and run the standard configuration and testing commands for your project.
      We're pretty good at it, so this should work even if you deviate from the norm in a couple of ways.
      You use Riak? That's not going to phase us.

      The standard project setup is therefore to login, click on the project you want to test, and sit back and wait for the tests to finish.
      We'll make everything else work.

      Of course, life is not always sunshine and daisies.
      And that's what this guide is for:
      %ul
        %li
          We'll talk you through the
          %a{href: "#inference"} standard things
          we look for to make projects work.
        %li
          We'll help you our with
          %a{href: "/docs/common-problems"} common problems
          that users experience when running tests with Circle.
        %li
          We'll even show you how to test your
          %a{href: "/docs/configuration#custom"} completely custom
          project.

    %h1.section
      %a#what-happens
    %hr

    %p
      But first a quick detour:
      %i what happens when you add an account to Circle?

    %p
      Basically, exactly what you'd expect:
      %ul
        %li
          Using the permissiosns you gave us when you signed up, we'll add some settings to your project on GitHub.
          A
          %i deploy key
          is used to check your project out from GitHub.
          A
          %i service hook
          is used to notify Circle when you push to GitHub.
        %li
          As soon as you add the project, we'll immediately check out the code onto our machines, and infer your settings.
          We'll also do this each time you push to GitHub.
        %li
          Our inference algorithms look through your dependencies, Gems, libraries and code to figure out how to run your tests.
          For example, we might find that you have a standard Rails project using Postgres, with specs and features, so we'll run
          = succeed ",", ->
            %code bundle install
          = succeed ",", ->
            %code bundle exec rake db:schema:load
          = succeed ",", ->
            %code bundle exec rspec spec
          = succeed ",", ->
            %code bundle exec cucumber
        %li
          You can watch the build update in real-time on your dashboard.
        %li
          We'll send you a notification when you're done.

      OK then, go add your first project!

    %h1.section
      %a#inference Inference
    %hr

    %h2 Getting to green

    %p
      If this is your first time setting up Continuous Integration, your build is not likely have passed.
      At this point, it'



    %h1.section
      %a#headings When inference doesn't work
    %hr


    %h1.section
      %a#headings When you have something custom
    %hr


    %h1 Level One Heading
    %h2 Level Two Heading
    %h3 Level Three Heading
    %h4 Level Four Heading
    %h5 Level Five Heading
    %h6 Level Six Heading

    %h1.section
      %a#text Text Elements
    %hr

    %p
      This is a standard paragraph. It has a <strong>strong tag</strong>, an <em>em tag</em> and a <del>strikethrough</del> which is actually just the del element. There are a few more inline elements which are not in the WordPress admin but we should check for incase your users get busy with the copy and paste. These include <cite>citations</cite>, <abbr title="abbreviation">abbr</abbr>, bits of <code class="inline">code</code> and <var>variables</var>, <q>inline quotations</q>, <ins datetime="2011-12-08T20:19:53+00:00">inserted text</ins>, text that is <s>no longer accurate</s> or something <mark>so important</mark> you might want to mark it. We can also style subscript and superscript characters like C0<sub>2</sub>, here is our 2<sup>nd</sup> example. If they are feeling non-semantic they might even use <b>bold</b>, <i>italic</i>, <big>big</big> or <small>small</small> elements too. Incidentally, these HTML4.01 tags have been given new life and semantic meaning in HTML5, you may be interested in reading this <a title="HTML5 Semantics" href="http://csswizardry.com/2011/01/html5-and-text-level-semantics">article by Harry Roberts  <i class="icon-external-link"></i></a> which gives a nice excuse to test a link.

    %h1.section
      %a#lists Lists
    %hr

    %ul
      %li Normal
      %li.icon-ok .icon-ok
      %li.icon-chevron-right .icon-chevron-right
      %li.icon-info-sign .icon-info-sign
      %li.icon-question-sign .icon-question-sign

    %ol
      %li Ordered list item one.
      %li Ordered list item two.
      %li Ordered list item three.
      %li Ordered list item four.

    %h1.section
      %a#blockquotes Blockquotes
    %hr

    %blockquote
      Basic blockquotes are just wrapped in blockquote tags and have no clear way for the user to define a source

    %blockquote{ cite: "http://html5doctor.com/blockquote-q-cite/" }
      HTML5 comes to our rescue with the footer element, allowing us to add semantically separate information about the quote.
      %footer
        %cite
          %a{ href: "http://html5doctor.com/blockquote-q-cite/" } Oli Studholme, HTML5doctor.com
            %i.icon-external-link

    %h1.section
      %a#tables Tables
    %hr

    %table
      %thead
        %tr
          %th Table Head Column One
          %th Table Head Column Two
          %th Table Head Column Three

      %tfoot
        %tr
          %td Table Footer Column One
          %td Table Footer Column Two
          %td Table Footer Column Three

      %tbody
        %tr
          %td Table Row Column One
          %td Short Text
          %td Testing a table cell with a longer amount of text to see what happens, you're not using tables for site layouts are you?

      %tr
        %td Table Row Column One
        %td Table Row Column Two
        %td Table Row Column Three

      %tr
        %td Table Row Column One
        %td Table Row Column Two
        %td Table Row Column Three

      %tr
        %td Table Row Column One
        %td Table Row Column Two
        %td Table Row Column Three

      %tr
        %td Table Row Column One
        %td Table Row Column Two
        %td Table Row Column Three

    %h1.section
      %a#pre Pre/Code
    %hr

    %pre
      :preserve:escaped
        <code>Cloning into /home/ubuntu/CircleCI-177...
        Warning: Permanently added 'github.com,207.97.227.239' (RSA) to the list of known hosts.
        Note: checking out '50f2626256c8ba0f78705d4405ca812186e0e6ec'.

        You are in 'detached HEAD' state. You can look around, make experimental
        changes and commit them, and you can discard any commits you make in this
        state without impacting any branches by performing another checkout.</code>
