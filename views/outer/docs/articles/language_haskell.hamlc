- @title = 'Continuous Integration and Continuous Deployment with Haskell'
- @short_title = 'Haskell'
- @lastUpdated = 'April 17, 2014'

%p
  Circle supports building Haskell applications with GHC and Cabal.

%h3 Version

%p
  Circle has several versions of GHC available. We use
  %code= CI.Versions.ghc
  as the default; if you'd like to specify a particular version, you
  can specify it in your <code>circle.yml</code>:

!= HAML.circleyml_language_example({language: "ghc"})

%h3 Cabal

%p
  Circle has Cabal 1.18 installed; if we find a Cabal file at the root of
  your repository, we install your dependencies and run <code>cabal build</code>
  and <code>cabal test</code>.

  You can customize this easily in your <code>circle.yml</code> by setting
  the <code>override</code>, <code>pre</code>, and <code>post</code> properties
  in the <code>dependencies</code> and <code>test</code> sections:

%pre
  %code.no-highlight<>
    :preserve
      test:
        post:
          - cabal bench

%h3 Haddock

%p
  Circle supports saving and uploading arbitrary
  != succeed ';', ->
    %a{href: "/docs/build-artifacts"} build artifacts
  if you'd like to automatically generate documentation with Haddock,
  you can put something like this in your <code>circle.yml</code>:

%pre
  %code.no-highlight<>
    :preserve
      test:
        post:
          - cabal haddock --builddir=$CIRCLE_ARTIFACTS

%p
  If you have any trouble, please
  != HAML.contact_us()
  and we will be happy to help.
