- @title = 'Continuous Integration and Continuous Deployment with PHP'
- @short_title = 'PHP'
- @lastUpdated = "Jun 19, 2013"


%h2 Overview

%p
  Circle works seamlessly with all the tools and package managers,
  such as <code>composer</code>, that help PHP developers test and deploy their code.
  Circle looks at your code and determines what version of PHP you use.
  We run your specified tests.
  Circle has your project's DB requirements covered because we have pre-installed
  the most-used databases.
  To complete the process, we can&mdash;if you tell us where&mdash;deploy your code once your build is green.

%p
  If your project has any special requirements, tell us about them by including a
  %a{href: "/docs/configuration"} circle.yml
  file in your repo.

%h2 Version

%p
  Circle supports more than a dozen
  %a{href: "/docs/environment#php"} versions of PHP,
  and uses
  %code= CI.Versions.default_php
  as the default.
  Please
  = HAML.contact_us()
  if you need a different version; we'll be happy to install it for you.

%h2#composer-pear-pecl Dependencies&mdash;including composer, pear, and pecl

%p
  Circle has all three of these package managers installed.
  You don't need to specify anything in your <code>circle.yml</code> file
  if you are using <code>composer</code>.
  When Circle encounters a <code>composer.json</code> file in your code,
  CircleCI has all three of these package managers installed.

%p
  You don't need to specify anything in your <code>circle.yml</code>
  file if you are using <code>composer</code>.
  When CircleCI encounters a <code>composer.json</code> file in your code,
  we automatically install your <code>composer</code> dependencies.

%p
  To install your dependencies with either <code>pear</code> or <code>pecl</code>,
  you have to include pre-dependency commands in your <code>circle.yml</code> file.
  The following example shows how you would tell CircleCI to invoke <code>pecl</code>
  to include the MongoDB extension.


%pre
  %code.no-highlight<>
    :preserve
      dependencies:
        pre:
          - pecl install mongo

%p
  Your <code>circle.yml</code> file is the way to handle customization.
  Let's say that you need to change your <code>config.ini</code> file,
  and you want to make sure that CircleCI knows your tests use <code>php 5.4.6</code>.
  Here is an example that states the version number and
  includes a pre-dependency command telling CircleCI your repo contains
  a file named <code>config/custom.ini</code>.

%pre
  %code.no-highlight<>
    :preserve
      dependencies:
        pre:
          - cp config/custom.ini ~/.phpenv/versions/$(phpenv global)/etc/conf.d/

%p
  Note: <code>phpenv global</code> returns the PHP version that has been
  specified in your <code>circle.yml</code> file.

%p
  Here's another example showing how you could adjust PHP settings in
  a <code>.ini</code> file.

%pre
  %code.no-highlight<>
    :preserve
      dependencies:
        pre:
          - echo "memory_limit = 64M" > ~/.phpenv/versions/$(phpenv global)/etc/conf.d/memory.ini

%h2 Databases

%p
  We have pre-installed more than a dozen
  = succeed ',', ->
    %a{href: "/docs/environment#databases"} databases and queues
  including PostgreSQL and MySQL.
  If needed, you have the option of
  = succeed '.', ->
    %a{href: "/docs/manually#dependencies"} manually setting up your test database

%h2#php-apache Using the Apache Webserver
%p
  Apache2 is already installed on CircleCI containers but it needs to be
  configured to host your PHP application.

%p
  To enable your site check a file containing your site configuration into your
  repository and copy it to <code>/etc/apache2/sites-available/</code> during
  your build.
  Then enable the site with <code>a2ensite</code> and restart Apache.

%p
  An example configuration that sets up Apache to serve the PHP site from
  <code>/home/ubuntu/MY-PROJECT/server-root</code> is:

%pre
  %code.no-highlight<>
    :preserve
      Listen 8080

      &lt;VirtualHost *:8080&gt;
        LoadModule php5_module /home/ubuntu/.phpenv/versions/PHP_VERSION/libexec/libphp5.so

        DocumentRoot /home/ubuntu/MY-PROJECT/server-root
        ServerName host.example.com
        &lt;FilesMatch \\.php$&gt;
          SetHandler application/x-httpd-php
        &lt;/FilesMatch&gt;
      &lt;/VirtualHost&gt;
%p
  Replace <code>MY-SITE</code> in with the name of your site configuration
  file and <code>PHP_VERSION</code> with the version of PHP you configured
  in your <code>circle.yml</code>.

%p
  Then enable your site and restart Apache by adding the following to your <code>circle.yml</code>

%pre
  %code.no-highlight<>
    :preserve
      dependencies:
        post:
          - cp ~/MY-PROJECT/MY-SITE /etc/apache2/sites-available
          - a2ensite MY-SITE
          - sudo service apache2 restart

%h2 Testing

%p
  Circle always runs your tests on a fresh machine.
  The <code>test</code> section of your <code>circle.yml</code> file is where
  you specify your customized testing needs, such as including your own
  testing script.

%pre
  %code.no-highlight<>
    :preserve
      test:
        override:
          - ./my_testing_script.sh

%h3#xdebug Enable Xdebug

%p
  Xdebug is installed for all versions of PHP, but is disabled by default.
  It is simple to reactivate this tool by adding the following to your
  <code>circle.yml</code> file:

%pre
  %code.no-highlight<>
    :preserve
      dependencies:
        pre:
          - sed -i 's/^;//' ~/.phpenv/versions/$(phpenv global)/etc/conf.d/xdebug.ini

%p

%h2 Deployment

%p
  Circle offers first-class support for
  = succeed '.', ->
    %a{href: "/docs/configuration#deployment"} deployment
  When a build is green, Circle will deploy your project as directed
  in your <code>circle.yml</code> file.
  We can deploy to PaaS providers as well as to
  physical servers under your control.

%h3 Troubleshooting for PHP

%p
  If you run into problems, check out our
  %a{href: "/docs/troubleshooting-php"}
    PHP troubleshooting
  write-ups about these issues:

= @include_article('troubleshooting_php')

%p
  If you are still having trouble, please
  = HAML.contact_us()
  and we will be happy to help.
