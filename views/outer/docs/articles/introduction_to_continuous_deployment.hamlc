- @title = "Introduction to Continuous Deployment"
- @lastUpdated = "Jun 18, 2013"

%h2 Overview

%p
  Circle enables you to automatically deploy after green builds.
  We have customers deploying to PaaSes such as Heroku, Engine Yard,
  and Google App Engine, hosted cloud servers (like EC2 and Rackspace),
  and to private and colo servers&mdash;even behind firewalls.
  Some use tools like Capistrano, Fabric, and Paver.
  However you want to deploy your code, Circle makes such
  Continuous Deployment easy.

%h3 Deployment syntax

%p
  Tell Circle about your deployment requirements in the <code>deployment</code>
  section of your
  %a{href: '/docs/configuration'}
    circle.yml
  file.
  Within this section, you can can define custom deployment <code>commands</code> for each
  branch, directing Circle to use specific deployment tools or custom scripts.
  Deployment-related commands are triggered only after a successful build.

%pre
  %code.no-highlight<>
    :preserve
      deployment:
        production:        # just a label; label names are completely up to you
          branch: master
          commands:
            - ./deploy-to-production.sh
        staging:
          branch: staging
          commands:
            - ./deploy-to-staging.sh
%p
  When the tests pass on the master branch,
  Circle will run the deploy-to-production.sh script,
  and when the tests pass on the staging branch,
  we'll run the deploy-to-staging.sh script.


%h2 Deploying over SSH

%p
  Most of our customers deploy to servers using SSH.
  You need to upload your SSH keys from your project's
  <b>Edit settings > SSH keys</b> page in the Circle UI.
  Circle adds them to the <code>ssh-agent</code>, so they are available for forwarding.

%p
  You can list commands or include bash scripts for SSH deployment in the
  <code>circle.yml</code> file.
  You can also use tools such as Capistrano or Fabric when deploying to
  private servers as well as to EC2, Rackspace, and other cloud hosting providers.

%p
  You can use your existing Capistrano recipes, for example:

%pre
  %code.no-highlight<>
    :preserve
      deployment:
        production:
          branch: master
          commands:
            - bundle exec cap production deploy
%p
  Here's an example using Fabric:

%pre
  %code.no-highlight<>
    :preserve
      deployment:
        production:
          branch: master
          commands:
            - fab deploy

%h2 PaaS deployments

%p
  Circle deploys to Heroku, Engine Yard, Google App Engine, and other
  PaaSes.
  Of course, first you'll need to provide us with proper permissions and SSH keys.

%p
  Circle provides
  %a{href: '/docs/continuous-deployment-with-heroku'}
    Continuous Deployment with Heroku.
  Likewise, Circle makes it easy to continuously
  %a{href: '/docs/deploy-google-app-engine'}
    deploy to Google App Engine.
  We will be adding documents about deploying to other PaaS providers soon,
  but you can probably get the gist of things from the aforementioned write-ups.
  If not,
  = HAML['contact_us']()
  and we'll help with your deployment.

%h2 Firewalls, webhooks, and Circle's Public IP address ranges

%p
  If you want to use webhooks to deploy from Circle to a private server behind
  a firewall, to a VPN, or to an AWS VPC, you can set up such deployments.
  Similarly, Circle enables you to configure access to a remote server to
  utilize a stored database, an artifacts server, a private gem server, etc.

%p
  Circle is hosted in EC2's US East, so our Amazon
  %a{href: 'https://forums.aws.amazon.com/ann.jspa?annID=1701'} EC2 public IP address ranges
  are there.
  (Be aware that this link can sometimes be broken when Amazon make updates.
  In such cases, you can usually access the list via the service's
  %a{href: 'https://forums.aws.amazon.com/forum.jspa?forumID=30'} forum announcements
  page.)

%p
  Circle's AWS security group is sg-f98a8290.

%p
  Use the IP address ranges and security group number as needed to configure
  a physical or in-the-cloud server under your control.
  If you run into any problems,
  = HAML['contact_us']()
  and we'll be happy to help.
