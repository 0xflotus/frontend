%div
  %h1 Change Build Speed For This Project
  %div
    .row-fluid{style: "min-height: 250px"}
      .span5
        %p
          %form.select-project-parallelization{data-bind: "foreach: $root.parallelism_options"}
            %label{data-bind: "css: $root.project().parallel_label_style($data), attr: { for: $root.project().parallel_input_id($data)}, event: {mouseover: $root.project().parallel_focus_in}"}
              != succeed "x", ->
                %span{data-bind: "text: $data"}
              %input{type: "radio", name: "parallel", data-bind: "value: $data, checked: $root.project().editParallel, disable: $root.project().disable_parallel_input($data), click: $root.project().set_parallelism, attr: { id: $root.project().parallel_input_id($data), 'data-loading-text': $data, 'data-success-text': $data, 'data-failed-text': $data}"}
      .span6.well.focused-label{data-bind: "css: speed_description_style"}
        %span{data-bind: "if: focused_parallel() == 1"}
          At 1x build speed, all of your tests will run sequentially on the same machine.
        %p{data-bind: "if: focused_parallel() > 1"}
          %strong
            != succeed 'x', ->
              %span{data-bind: "text: focused_parallel"}
          runs your tests in parallel across
          %strong{data-bind: "text: focused_parallel"}
          machines to finish your build
          %strong{data-bind: "text: focused_parallel"}
          times faster.

        %div{data-bind: "ifnot: paying_user"}
          .alert.alert-warning
            %a{href: '/account/plans'}
              Select a plan
            to increase your maximum build speed
        / ko if: paying_user
        %div{data-bind: "if: show_parallel_upgrade_plan_p"}
          .alert.alert-warning
            Your plan's max speed is only
            != succeed ".", ->
              %strong{data-bind: "text: plan_max_speed"}
            %span{data-bind: "if: current_user_is_paying_user_p"}
              %a{href: "/account/plans#edit"}
                Upgrade your plan
              to unlock more speed.
            %span{data-bind: "ifnot: current_user_is_paying_user_p"}
              Send
              %span{data-bind: "text: paying_user_ident"}
              to
              %a{href: "/account/plans#edit"}
                https://circleci.com/account/plans#edit
              to upgrade your plan.
        %div{data-bind: "if: show_parallel_upgrade_speed_p"}
          .alert.alert-warning
            %p{data-bind: "if: current_user_is_paying_user_p"}
              %a{href: "/account/plans#speed"}
                Increase your speed
              to
              %strong
                != succeed "x", ->
                  %span{data-bind: "text: focused_parallel"}
                for
                %span{data-bind: "money: focused_parallel_cost_increase"}
              more per month.
            %p{data-bind: "ifnot: current_user_is_paying_user_p"}
              Send
              %span{data-bind: "text: paying_user_ident"}
              to
              %a{href: "/account/plans#speed"}
                https://circleci.com/account/plans#speed
              to increase your speed to
              %strong
                != succeed "x", ->
                  %span{data-bind: "text: focused_parallel"}
                for
                %span{data-bind: "money: focused_parallel_cost_increase"}

              more per month.

        / /ko

    .row-fluid{data-bind: "if: retried_build"}
      .span10
        %a.btn.btn-success{type: "submit",
                           name: "submit",
                           data-bind: "click: retried_build().visit"}
          View your latest build running at
          != succeed "x", ->
            %span{data-bind: "text: retried_build().parallel"}

    .row-fluid
      .span12
        %h3 How "Build Speed" Works
        %ul
          %li
            We run your tests in parallel on completely separate machines
            %ul
              %li
                No shared memory, processes, or databases
          %li
            Currently supports Rspec, Cucumber, and Test:Unit
          %li
            Dramatically reduces build time
            %ul
              %li
                45 minute build fell to 18 minutes with 3x build speed
              %li
                20 minute build dropped to 11 minutes with 2x build speed

    .row-fluid
      .span10
        %h3 Things our customers say about parallel builds
        %p
          %blockquote{ cite: "#" }
            %p
              The thing that sold us on Circle was the speed. Their tests run really really fast. We've never seen that before. One of our developers just pushes to branches so that Circle will run his tests, instead of testing on his laptop.
              %strong
                The parallelization just works - we didn't have to tweak anything.
              Amazing service.

            %small
              %cite
                %a{ href: "http://zencoder.com/company/" } Brandon Arbini
                %a{ href: "http://zencoder.com/" } VP of Product & Engineering at Zencoder.com
