.container-fluid
  .row{data-bind: "with: build"}

    %dl.offset1.span6

      %dt.key
        Revision
      %dd.value{data-bind: "attr: { href: github_url() }, text: description(true)"}

      %dt.key
        Build
      %dd.value{data-bind: "text: build_num"}


      %dt.key
        Author
      %dd.value
        %a{data-bind: "text: author()"}


    %dl.offset1.span6

      %dt.key
        Status
      %dd.value{data-bind: "text: status(), css: style()"}

  -#     %dt.key
  -#       Started at
  -#     %dd.value
  -#       = as_commit_time @build["start_time"]

  -#     %dt.key
  -#       Length
  -#     %dd.value
  -#       = as_length_of_build @build["start_time"], @build["stop_time"]


  -#   %dl.offset1

  -#     %dt.key
  -#       Started by
  -#     %dd.value
  -#       = @build.why_in_words


  -# .row
  -#   %dl.offset1

  -#     %dt.key
  -#       Log
  -#     %dd.value
  -#       = @build["subject"]
  -#       - if @build["body"].to_s != ""
  -#         %p
  -#           = @build["body"]


  -# - @logs.each do |l|
  -#   -# wrapper allows the header and detail be siblings, for the JS
  -#   .wrapper
  -#     .action_header{ :class => action_header_style(l) }
  -#       %span.command
  -#         $
  -#         = l.name
  -#       %span.time
  -#         = surround '(', ')' do
  -#           = as_length_of_build(l.start_time, l[:end_time] || @build.stop_time)
  -#         - if l.status == :timedout
  -#           %b
  -#             (TIMED OUT)

  -#     .detail{ :class => action_log_style(l) }
  -#       - if l["out"]
  -#         %pre.output
  -#           = preserve do
  -#             !~ action_log_output(l.out)
