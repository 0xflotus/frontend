.ns("frontend.components.pieces.modal", {
  .ui("modal", {}, {
    .el("modal", {
      // This element provides the screen behind the modal box (and contains
      // everything).

      @modal-padding: 15px;

      .flexy();

      position: fixed;
      top: 0;
      right: 0;
      bottom: 0;
      left: 0;

      // Modals scroll on small screens.
      overflow: auto;

      // On WebKit touch devices, scroll an oversized modal with momentum.
      -webkit-overflow-scrolling: touch;

      background-color: fade(@black, 50%);

      // The modal box itself.
      > .box {
        // The modal box is 700px wide, but shrinks ot the width of the
        // viewport.
        flex: 0 1 700px;

        // It\'s centered in both directions.
        margin: auto;

        background-color: @white;
        box-shadow: 0 3px 9px rgba(0,0,0,.5);

        > .header {
          .flexy(row, space-between);

          padding: @modal-padding;
          margin-bottom: @modal-padding;

          border-bottom: 1px solid #e5e5e5;
          background: @grayLightest;

          > .close-button {
            padding-top: 5px;
            font-size: @fontSizeLarger;
            cursor: pointer;
          }

          // As of this writing, an upstream .title selector bleeds into this
          // component, so we need a more specific name. This should become
          // .title when it\'s free again.
          > .modal-component-title {
            font-size: @fontSizeLarger;
            line-height: 1.5;
          }
        }

        > .body {
          padding: @modal-padding;
        }
      }


      // Transitions

      &.modal-appear,
      &.modal-enter {
        @bg-fade-in-duration: 0.2s;

        transition: background-color @bg-fade-in-duration linear;

        > .box {
          transition: all 0.2s ease-out @bg-fade-in-duration;
        }
      }

      &.modal-appear:not(.modal-appear-active),
      &.modal-enter:not(.modal-enter-active) {
        background-color: transparent;

        > .box {
          transform: translateY(calc(-50vh - 50%));
        }
      }

      &.modal-leave {
        transition: background-color 0.2s linear;

        > .box {
          transition: all 0.2s ease-in;
        }
      }

      &.modal-leave.modal-leave-active {
        background-color: transparent;

        > .box {
          transform: translateY(calc(-50vh - 50%));
        }
      }
    });
  });
});