@aside_menu_width: (@tile * 3);

@new_aside_menu_width: 285px;

@aside_nav_width: @tile;

@license_banner_height: @tile;

@em: @baseFontSize;
@cascade_delay: 30ms;
@aside_items: 7;
@aside_transition_speed: 200ms;
@activity_color: fade(@white, 55);
@activity_ico: (@em - 2);
@activity_line: (@em * 1.5);
@activity_toggle: round((@em + (@em / 4) + (1px * 2) + @em + (@em / 2)) * -1);

.inner {
  .app-main {
    .flexy(column);
    margin-left: @aside_nav_width + @aside_menu_width;
    overflow: auto;

    transition: margin @aside_transition_speed;
    transition-timing-function: cubic-bezier(0.5, -.25, 0.5, 1.25);
  }

  .app-main.new-app-main-margin {
    margin-left: @aside_nav_width + @new_aside_menu_width;
  }

  .app-aside-left.menuless + .app-main {
    margin-left: @aside_nav_width;
  }

  .app-aside-left.including-license-banner + .app-main {
    margin-top: @license_banner_height;
  }
}
.aside-left-nav {
  .flex(0 0 100%);
  width: @aside_nav_width;
  background: @blueDarkest;
  color: fade(@white, 66);
  overflow-y: auto;
}

.app-aside-left {
  .flexy(column);
  .flex-wrap(wrap);

  position: fixed;
  z-index: @zindex-aside;
  left: 0;
  top: 0;

  height: 100vh;

  // Because this div can include elements which stretch across the top and the
  // side of the page, it tends to cover the page. Therefore, we need to make it
  // (but not its children) invisible to the pointer.
  pointer-events: none;
  > * { pointer-events: auto; }

  a {
    outline: none;
    text-decoration: none;
    &:not(:hover) {
      color: inherit;
    }
  }
  .tooltip {                    //
    font-size: @baseFontSize;   //
    .tooltip-inner {            //
      border-radius: (@em * 2); //
      padding: (@em / 2) @em;   // BS RESET
    }                           //
    .tooltip-arrow {            //
      display: none;            //
    }                           //
  }                             //
}
.aside-left-nav,
.aside-left-menu {
  .flexy(column);
}

.aside-left-menu.new-aside-left-menu-width {
  width: @new_aside_menu_width;
  .flex(0 0 @new_aside_menu_width);
}


.aside-left-menu {
  .flex(1 0 1px);
  width: @aside_menu_width;
  box-shadow: 1px 0 @grayBoxBorder;
  position: relative;
  overflow: hidden;
  transition: @aside_transition_speed;
  transition-timing-function: cubic-bezier(0.5, -.25, 0.5, 1.25);
  .aside-activity {
    color: @grayLight;
    position: relative;
    header {
      .box-sizing(border-box);
      height: @tile;
      border-bottom: solid 1px @grayBoxBorder;
      padding: @em;
      position: relative;
      display: block;
      width: 100%;

      select {
        color: @grayDark;
        display: inline-block;
        -webkit-appearance: none; // gets rid of ugly shadow in safari
        -moz-appearance: none; // gets rid of extra arrow in FF
        border: none;
        outline: none;
        margin: 0;
        padding: (@em - 2)  21px @em 0;
        vertical-align: middle;
        &:hover {
          cursor: pointer;
        }
      }

      .toggle-sorting {
          float: left;
      }

      .toggle-all-branches {
          float: right;
      }
      .select-arrow {
        position: relative;
        display: inline-block;
        margin-left: -11px;
        color: @blacken;
        text-align: center;
        pointer-events: none;
      }

      .select-arrow img {
        position: relative;
        top: -1px;
      }

      input[type=radio] {
          display: none;
          &:checked + label {
              background-color: rgba(0,0,0, 0.1);
              border-radius: 3px;
          }
      }

      label.radio {
          display: inline-block;
          font-weight: normal;
          color: @grayDark;
          margin-left: 10px;
          text-align: center;
          width: 40px;
          height: @activity_line;
          line-height: @activity_line;
          cursor: pointer;
          &:hover {
            cursor: pointer;
          }

      }

    }

    select {
      background-color: @white;
    }

    ul {
      padding-left: 0;
    }

    &:hover {
      .project-settings-icon {
        svg {
          stroke: @grayLight;
          &:hover {
            stroke: @linkColorHover;
          }
        }
      }
    }
    .status {
      .icon_style(transparent, @activity_ico);
      i {
        &.ico {
          .busy-light {stroke: @blueLight;}
          .pass-light {stroke: @green;}
          .fail-light {stroke: @redLight;}
          .hold-light {stroke: @gray;}
          .stop-light {stroke: @orange;}
          .none-light {stroke: @white;}
          [class$="-light"] {stroke-width: 10;}
        }
      }
    }
    .project {
      a {
        &:not(:hover) {
          color: @grayDark;
        }
      }
    }
  }
}

.aside-item {
  .flex(0 1 @tile);
  .flexy(center);
  .shadow_noboss();
  background: transparent;
  white-space: nowrap;
  transition: (@aside_transition_speed / 2) ease-in-out;
  min-height: 1.5em;

  &:hover,
  &:focus {
    .shadow_emboss(@blueDarker);
    color: @white;
    background: @blueDarker;
    transition-duration: 0;
  }

  &:active,
  &.open {
    .shadow_deboss(@blueDarkest);
    color: @white;
    background: fade(@black, 8);
    transition-duration: 0;
  }

  &.logo {
    .justify-content(center);
    .underline_deboss();
    .logomark {
      .flexy(center, center);
      .icon_style(@white, (@em * 2));
      width: @tile;
      height: @tile;
    }
  }

  &.push-to-bottom {
    margin-top: auto;
  }

  &:nth-child(2)  > i {transition-delay: @cascade_delay *  1;}
  &:nth-child(3)  > i {transition-delay: @cascade_delay *  2;}
  &:nth-child(4)  > i {transition-delay: @cascade_delay *  3;}
  &:nth-child(5)  > i {transition-delay: @cascade_delay *  4;}
  &:nth-child(6)  > i {transition-delay: @cascade_delay *  5;}
  &:nth-child(7)  > i {transition-delay: @cascade_delay *  6;}
  &:nth-child(8)  > i {transition-delay: @cascade_delay *  7;}
  &:nth-child(9)  > i {transition-delay: @cascade_delay *  8;}
  &:nth-child(10) > i {transition-delay: @cascade_delay *  9;}
  &:nth-child(11) > i {transition-delay: @cascade_delay * 10;}

  > i {
    position: relative;

    min-width: @baseFontSize;
    margin: 0 @baseFontSize 0 ((@tile - @baseFontSize) / 2);

    transition: margin @aside_transition_speed;
  }

  &.unread > i:after {
    position: absolute;
    top: -3px;
    right: -5px;

    width: 6px;
    height: 6px;
    border-radius: 50%;

    content: ' ';
    background-color: @white;
  }

  img {
    @s: (@tile / 2);
    min-width: @s;
    height: @s;
    margin: 0 @baseFontSize 0 ((@tile - @s) / 2);
    border-radius: (@s / 2);
    transition: margin (@aside_transition_speed * 2);
    pointer-events: none;
  }

  span {
    opacity: 1;
    visibility: visible;
    transition: visibility 0ms (@aside_transition_speed / 2), opacity (@aside_transition_speed * 2) 0ms;
  }
}

.aside-activity {
  .flexy(column);
  font-size: @em;
  background: fade(@black, 0);
  opacity: 0;
  visibility: hidden;
  transition: opacity 400ms, background 400ms, visibility 0ms 1000ms, height 200ms ease-in-out;
  height: 0%;
  &.open {
    opacity: 1;
    visibility: visible;
    transition: opacity 400ms 100ms, background 200ms, visibility 0ms 0ms, height 200ms ease-in-out;
    height: 100vh;
    .wrapper {
      height: 100vh; // needed to fix safari bug preventing accordion from opening up
    }
  }
  .wrapper {
    height: 100%;
    overflow-x: hidden;
    overflow-y: scroll;
  }
  ul {
    margin: 0;
    list-style: none;
    &:not(.open) {
      li {
        a {
          &.latest {
            .flexy(center, center);
          }
        }
      }
    }
  }
  li {
    .flexy(center, flex-end);
    line-height: @em; // BS RESET
    overflow: hidden;
    &:hover {
      .statuses {
        a {
          &:not(:last-child) {
            transition-delay: 1000ms; // delay meant to give user time to hover over to branch name
          }
        }
        &:hover {
          a {
            &:not(:last-child) {
              width: @activity_ico;
              margin: 0 round((@activity_line - @activity_ico) / 2);
              transition: 100ms 100ms;
            }
            &:hover {
              &:nth-child(-n + 5) {
                path {
                  opacity: 1;
                }
              }
            }
            &:nth-last-of-type(1) path {opacity: .89}
            &:nth-last-of-type(2) path {opacity: .55}
            &:nth-last-of-type(3) path {opacity: .34}
            &:nth-last-of-type(4) path {opacity: .21}
            &:nth-last-of-type(5) path {opacity: .13}
          }
        }
      }
    }
    &:not(:first-of-type) {
      margin: 0 @em;
    }
  }
  .project {
    .flexy(center);
    width: 100%;
    a {
      height: @activity_line;
      line-height: @activity_line;
      overflow: hidden;
      text-overflow: ellipsis;
      white-space: nowrap;
      &:not(:hover) {
        color: fadein(@activity_color, 34);
      }
      &.toggle {
        .box-sizing(border-box);
        .flex(0 0 (@em * 2));
        .icon_style(@grayDark, 100%);
        width: @em * 2;
        height: @em *2;
        padding: 5px; // got this from trial and error
        &:hover {
          .ico {
            .repo {
              fill: @linkColorHover;
            }
          }
        }
        .ico {
          width: 100%;
          height: 100%;
        }
        .ico {
          .repo {
            fill: @grayDark;
          }
        }
      }
      &.title {
        .flex(1 1 auto);
      }
      &.project-settings-icon {
        .flexy(center, center);
        // width: @activity_line;
        height: @activity_line;
        line-height: @activity_line;
        padding-right: 1em;
        svg {
          stroke: fade(@grayLight, 0);
          transition: 200ms;
          path {
            &:first-child {
              stroke-width: 8;
            }
          }
        }
      }
      &.latest {
        .flex(0 0 @activity_ico);
        display: none;
        width: @activity_ico;
        height: @activity_line;
        line-height: @activity_line;
        padding-right: 1em;
      }
    }
  }
  .branch,
  .statuses {
    a {
      height: @activity_line;
      line-height: @activity_line;
    }
  }
  .branch {
    .flex(0 1 auto);
    .flexy(center);
    a {
      width: 100%;
      overflow: hidden;
      text-overflow: ellipsis;
      white-space: nowrap;
      position: relative;
    }
  }
  .statuses {
    .flex(1 0 auto);
    .flexy(center, flex-end);
    a {
      .flexy(center, center);
      overflow: hidden;
      &:not(:last-child) {
        width: 0;
        transition: 400ms;
      }
      &:last-child {
        padding-left: round((@activity_line - @activity_ico) / 2);
      }
    }
  }
  .when {
    .flexy(left, flex-start);
    height: @activity_line;
    line-height: @activity_line;
    font-family: @monoFontFamily;
    font-size: @fontSizeMini;
    color: @grayLight;
  }
}
&.ui-v2 .aside-activity .when {
    font-family: @monoFontFamilyV2;
}


.aside-user {
  .flexy(column);
  position: absolute;
  top: 0;
  left: -@tile;
  width: @tile;
  height: 100%;
  background: @appBackgroundColor;
  z-index: @zindex-tooltip;
  color: @appBackgroundColor;
  box-shadow: 1px 0 @grayBoxBorder;
  transition: (@aside_transition_speed / 2);
  transition-timing-function: cubic-bezier(0.5, -.25, 0.5, 1.25);
  overflow: hidden;
  &.open {
    left: 0;
    width: 100%;
    color: @gray;
    h5 {
      color: @black;
    }
    .aside-item {
      padding: 0 (@em * 2);
    }
  }
  header {
    .flex(0 0 auto);
    .justify-content(center);
    padding: 0;
  }
  h5 {
    font-weight: normal;
    color: @appBackgroundColor;
    white-space: nowrap;
    transition: (@aside_transition_speed / 2);
    transition-timing-function: cubic-bezier(0.5, -.25, 0.5, 1.25);
    width: 100%;
    text-align: center;
    height: @tile;
    line-height: @tile;
    margin: 0;
  }
  .close-menu {
    .flexy(center);
    position: absolute;
    top: 0;
    right: 0;
    height: @tile;
    padding: 0 @em;
    &:hover {
      path {
        stroke: @black;
      }
    }
    path {
      stroke: @grayLight;
      stroke-width: 5;
    }
  }
}
.aside-user-options {
  .flex(1);
  .flexy(column);
  overflow-y: auto;
  .aside-item {
    max-height: 3em;
    padding: 0;
    &:hover,
    &:focus {
      color: @grayDarker;
      box-shadow: none;
      background: @grayLightest;
    }
    &a:active {
      &:not(.active) {
        .shadow_deboss(@white);
        color: inherit;
        background: @grayLightest;
      }
    }
    &a.active {
      color: @grayDark;
      background: @grayLightest;
      cursor: default;
    }
    &.aside-heading {
      padding-top: 1em;
      font-weight: bold;
      color: @gray;
      background: @white;
      box-shadow: none;
    }
    &:last-child {
      margin-bottom: 1em;
    }
  }
}

.license-banner {
  .flexy(center);

  width: ~"calc(100vw - @{aside_nav_width})";
  height: @license_banner_height;
  padding: 0 20px;

  color: @white;
  background: @blueDarkest;

  .indicator {
    height: @font-size-large;
    margin-right: 20px;
    padding: 0 13px;

    font-size: @font-size-small;
    line-height: @font-size-large; // Height of indicator, to center vertically.

    background-color: @grayLightest;
    border-radius: @border-radius-base;
    color: @grayDark;
  }

  &.in-violation, &.expired {
    .indicator {
      background-color: #ed5c5c;
      color: @white;
    }
  }

  .message {
    .flex(1 0 auto);
    font-size: @font-size-large;
  }

  .timing {
    font-size: @font-size-base;
    text-transform: uppercase;

    .days {
      font-size: @font-size-large;
    }
  }

  .contact-sales {
    padding: 0 30px;
    height: 40px;
    margin-left: 40px;

    font-size: @font-size-large;
    font-weight: bold;
    line-height: 40px;

    border-radius: 20px;
    background-color: @blueDark;
    &:hover { color: inherit; }
  }
}
