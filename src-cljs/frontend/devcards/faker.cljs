(ns frontend.devcards.faker
  (:require [cljs-time.coerce :as time-coerce]
            [cljs-time.core :as time]
            [clojure.string :as string]
            [clojure.test.check.generators :as gen]))

(def lorem-words
  ["alias"
   "consequatur"
   "aut"
   "perferendis"
   "sit"
   "voluptatem"
   "accusantium"
   "doloremque"
   "aperiam"
   "eaque"
   "ipsa"
   "quae"
   "ab"
   "illo"
   "inventore"
   "veritatis"
   "et"
   "quasi"
   "architecto"
   "beatae"
   "vitae"
   "dicta"
   "sunt"
   "explicabo"
   "aspernatur"
   "aut"
   "odit"
   "aut"
   "fugit"
   "sed"
   "quia"
   "consequuntur"
   "magni"
   "dolores"
   "eos"
   "qui"
   "ratione"
   "voluptatem"
   "sequi"
   "nesciunt"
   "neque"
   "dolorem"
   "ipsum"
   "quia"
   "dolor"
   "sit"
   "amet"
   "consectetur"
   "adipisci"
   "velit"
   "sed"
   "quia"
   "non"
   "numquam"
   "eius"
   "modi"
   "tempora"
   "incidunt"
   "ut"
   "labore"
   "et"
   "dolore"
   "magnam"
   "aliquam"
   "quaerat"
   "voluptatem"
   "ut"
   "enim"
   "ad"
   "minima"
   "veniam"
   "quis"
   "nostrum"
   "exercitationem"
   "ullam"
   "corporis"
   "nemo"
   "enim"
   "ipsam"
   "voluptatem"
   "quia"
   "voluptas"
   "sit"
   "suscipit"
   "laboriosam"
   "nisi"
   "ut"
   "aliquid"
   "ex"
   "ea"
   "commodi"
   "consequatur"
   "quis"
   "autem"
   "vel"
   "eum"
   "iure"
   "reprehenderit"
   "qui"
   "in"
   "ea"
   "voluptate"
   "velit"
   "esse"
   "quam"
   "nihil"
   "molestiae"
   "et"
   "iusto"
   "odio"
   "dignissimos"
   "ducimus"
   "qui"
   "blanditiis"
   "praesentium"
   "laudantium"
   "totam"
   "rem"
   "voluptatum"
   "deleniti"
   "atque"
   "corrupti"
   "quos"
   "dolores"
   "et"
   "quas"
   "molestias"
   "excepturi"
   "sint"
   "occaecati"
   "cupiditate"
   "non"
   "provident"
   "sed"
   "ut"
   "perspiciatis"
   "unde"
   "omnis"
   "iste"
   "natus"
   "error"
   "similique"
   "sunt"
   "in"
   "culpa"
   "qui"
   "officia"
   "deserunt"
   "mollitia"
   "animi"
   "id"
   "est"
   "laborum"
   "et"
   "dolorum"
   "fuga"
   "et"
   "harum"
   "quidem"
   "rerum"
   "facilis"
   "est"
   "et"
   "expedita"
   "distinctio"
   "nam"
   "libero"
   "tempore"
   "cum"
   "soluta"
   "nobis"
   "est"
   "eligendi"
   "optio"
   "cumque"
   "nihil"
   "impedit"
   "quo"
   "porro"
   "quisquam"
   "est"
   "qui"
   "minus"
   "id"
   "quod"
   "maxime"
   "placeat"
   "facere"
   "possimus"
   "omnis"
   "voluptas"
   "assumenda"
   "est"
   "omnis"
   "dolor"
   "repellendus"
   "temporibus"
   "autem"
   "quibusdam"
   "et"
   "aut"
   "consequatur"
   "vel"
   "illum"
   "qui"
   "dolorem"
   "eum"
   "fugiat"
   "quo"
   "voluptas"
   "nulla"
   "pariatur"
   "at"
   "vero"
   "eos"
   "et"
   "accusamus"
   "officiis"
   "debitis"
   "aut"
   "rerum"
   "necessitatibus"
   "saepe"
   "eveniet"
   "ut"
   "et"
   "voluptates"
   "repudiandae"
   "sint"
   "et"
   "molestiae"
   "non"
   "recusandae"
   "itaque"
   "earum"
   "rerum"
   "hic"
   "tenetur"
   "a"
   "sapiente"
   "delectus"
   "ut"
   "aut"
   "reiciendis"
   "voluptatibus"
   "maiores"
   "doloribus"
   "asperiores"
   "repellat"])

(def lorem-word (gen/elements lorem-words))

(defn snake-case-identifier
  "Returns a generator which generates snake-case identifiers like \"at-qui-suscipit-cumque\"."
  ([]
   (gen/fmap (partial string/join "-") (gen/vector lorem-word)))
  ([min-words max-words]
   (gen/fmap (partial string/join "-") (gen/vector lorem-word min-words max-words))))

(defn sentence
  "Returns a generator which generates a sentence of lorem words (or the empty string)."
  []
  (gen/fmap
   (fn [[first-word & words]]
     (if first-word
       (str (string/join " " (cons (string/capitalize first-word) words)) ".")
       ""))
   (gen/vector lorem-word)))

(defn inst-in
  "Generates insts in the range from start to end (inclusive)."
  [start end]
  (gen/fmap #(js/Date. %)
            (gen/choose (inst-ms start) (inst-ms end))))

(defn inst-in-last-day
  "Generates an inst in the last 1 day."
  []
  (inst-in (time-coerce/to-date (time/ago (time/days 1)))
           (js/Date.)))
