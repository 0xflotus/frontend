#container_parent {
  position: relative;
  overflow: hidden;
  height: 100%;
  margin-left: 8.5%;
  margin-right: 8.5%;
}

// Used by om frontend to hide scrollers it needs for find in firefox
#container_scroll_parent {
  // hides scrollbar on container_parent
  overflow: hidden;
  // TODO: move this into the main #container_parent when om is fully shipped
  #container_parent {
    overflow-y: hidden;
    overflow-x: scroll;
    // hides scrollbar
    margin-bottom: -25px;
    padding-bottom: 25px;
  }
}

.containers {
  background-color: @appBackgroundColor;
  height: 30px;
  margin: 0px;
  padding-top: 5px;
  padding-bottom: 5px;
}

.containers.stuck {
  position: fixed;
  top: 0px;
  width: 100%;
  z-index: 10;
}

#topbar {
/* I really want the topbar fixed on the build page, but it interferes with
 * other pages
  position: fixed;
  width: 100%;
  z-index: 1;
*/
}


/* This .class { ... }
 *      .class:not(.other_class) { position:absolute }
 *      .class.other_class { position:relative }
 * trick for setting the panel position attributes is inspired by
 * http://tympanus.net/codrops/2013/09/05/sliding-horizontal-layout/
 */
.container-view {
  width: 100%;
  top: 0px;
}

// TODO: remove the :not(.current_container) when om is fully deployed
.container-view:not(.current_container) {
  position: absolute;
}

// TODO: remove om is fully deployed
.container-view.current_container {
  position: relative;
}

// Creates the selectors that will keep the proper container in view
// Generates #container_parent.selected_2 { #container_2 { position: relative; }}
.selectedX (@index) when (@index > -1) {
  (~"#container_parent.selected_@{index}") {
    (~"#container_@{index}") {
      position: relative;
    }
  }
  .selectedX(@index - 1);
}
.selectedX (-1) {}

@max_containers: 100;
.selectedX (@max_containers);

/* Set up a :after pseudo-element to reflect the build status */
ul.container-list {
  li > a.container-selector {
    position:relative;

    &:after {
      content: "";
      position: absolute;
      z-index: 1;
      bottom: 2px;
      left: 0;
      height: @sideLineWidth;
      width: 70%;
      margin-left: 15%;
      border-radius: 2px;
    }

    &.success:after { background: @green; }
    &.running:after { background: @yellow; }
    &.waiting:after { background: fadeout(@yellow, 70%); }
    &.canceled:after {background: @grayLight; }
    &.failed:after { background: @redLight; }
  }
}
