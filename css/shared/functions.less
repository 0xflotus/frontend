
// old mixins
// scheduled for demolition

.border-radius(@radius: 5px) {
   webkit-border-radius: @radius;
   moz-border-radius: @radius;
   border-radius: @radius;
}

.box-shadow(@arguments) {
    -webkit-box-shadow: @arguments;
    -moz-box-shadow: @arguments;
    box-shadow: @arguments;
}

.text-shadow(@size1, @size2, @size3, @color){
    -webkit-text-shadow: @size1 @size2 @size3 @color;
    text-shadow:-@size1 @size2 @size3 @color;
}

.buttonDark(@buttonColor: #004b64) {
  text-align: center;
  margin-left: -4px;
  border-radius: 4px;
  background-size: 100%;
  background-repeat: repeat-x;
  background-color: @buttonColor;
  background-image: linear-gradient(to bottom,
                      fadeout(@white, 95%) 0%,
                      fadeout(@black, 92%) 100%);
  border: 1px solid darken(@buttonColor,8%);
  box-shadow: 0 1px 1px fadeout(@black, 79%);
  transition: all .3s linear;
  display: inline-block;
  padding: 0 1em;
  white-space: nowrap;
  line-height: 3em;
  text-decoration: none;
  color: darken(@white, 13%);
  text-shadow: 0 -1px 1px darken(saturate(@buttonColor,8%),13%);
  .box-sizing(border-box);
  &:hover {
    background-size: 300%;
    background-color: darken(saturate(@buttonColor,3%),3%);
    border-color: darken(saturate(@buttonColor,3%),3%);
    box-shadow: 0 0 fadeout(@black, 100%);
    transition: all .1s ease-in-out;
    color: @white;
    text-shadow: 0 0 rgba(0,0,0,0);
  }
  &:active {
    background-size: 300%;
    background-color: darken(saturate(@buttonColor,5%),8%);
    border-color: darken(saturate(@buttonColor,3%),3%);
    box-shadow: 0 2px 3px rgba(0,0,0,.34) inset;
    transition: all .2s ease-in-out;
    color: darken(@white, 5%);
    text-shadow: 0 0 rgba(0,0,0,0);
  }
}

// Misc.
// odds and ends

.roundedOff {
  border-radius: 100em; // big enough to ensure btn rounds completely
}
.stretchOutBkg {
  background-size: 100%;
  background-repeat: no-repeat;
  background-position: center;
}
.stickyInput {
  @inputHeight: 3em;
  display: block;
  .box-sizing(border-box);
  width: 100%;
  height: @inputHeight;
  line-height: (2 / 3) * @inputHeight;
  background: transparent;
  border: none;
  .outlineInside(@grayLighter);
  font-weight: normal;
  border-radius: @inputHeight / 2;
  padding: (((1 / 3) * @inputHeight) / 2)
           (((1 / 9) * @inputHeight) + ((1 / 3) * @inputHeight));
  margin-bottom: (1 / 3) * @inputHeight;
  -webkit-font-smoothing: antialiased;
  &::-webkit-input-placeholder {
    color: @grayLighter;
    transition: all .2s ease-in-out;
    -webkit-transform-origin: left;
  }
  &:focus {
    .outlineInside(@blueLighter);
    &::-webkit-input-placeholder {
      color: @blueLighter;
    }
  }
  &:focus, &:valid {
    color: @grayDarker;
    &::-webkit-input-placeholder {
      -webkit-transform: translate(0, -75%) scale(.9, .9);
      visibility: visible !important;
      overflow: visible;
      text-shadow: -1px  0   @whiten,
                   -2px  0   @whiten,
                   -3px  0   @whiten,
                   -4px  0   @whiten,
                    1px  0   @whiten,
                    2px  0   @whiten,
                    3px  0   @whiten,
                   -1px -1px @whiten,
                   -2px -2px @whiten,
                   -3px -3px @whiten,
                   -4px -4px @whiten,
                   -5px -5px @whiten;
    }
  }
}

// Outline
// same effect as "border" w/o increasing object size

.outlineEmboss(@color) {
  border: none;
  @topHighlightColor: lighten(@color,     5);
  @outlineColor:       darken(@color, 11.75);
  box-shadow:  0    1px @outlineColor,
               0   -1px @outlineColor,
               1px  0   @outlineColor,
              -1px  0   @outlineColor,
               0    1px @topHighlightColor inset;
}
.outlineFlat(@color: @grayBoxBorder) {
  border: none;
  box-shadow:  0    1px @color,
               0   -1px @color,
               1px  0   @color,
              -1px  0   @color;
}
.outlineInside(@color) {
  border: none;
  box-shadow:  0    1px @color inset,
               0   -1px @color inset,
               1px  0   @color inset,
              -1px  0   @color inset;
}
.outlinePress(@color) {
  border: none;
  @topShadowColor: darken(@color, 5);
  box-shadow:  0    1px @color,
               0   -1px @color,
               1px  0   @color,
              -1px  0   @color,
               0    2px @topShadowColor inset;
}

// Gradients
// all three accept infinite number of colors and stops

.vertGradient(...) {
  @joined: ~`"@{arguments}".slice(1,-1)`;
  background-image: linear-gradient(to bottom, @joined);
}
.horiGradient(...) {
  @joined: ~`"@{arguments}".slice(1,-1)`;
  background-image: linear-gradient(to right, @joined);
}
.radiGradient(...) {
  @joined: ~`"@{arguments}".slice(1,-1)`;
  background-image: radial-gradient(ellipse at center, @joined);
}

// Flexbox
// makes very simple/powerful grids (good til IE10 [easy fix below 10] but Safari needs vendor temporarily)

.flex(@grow: 0, @shrink: 1, @basis: auto) {
  -webkit-flex: @grow @shrink @basis;
          flex: @grow @shrink @basis;
}
.flexBox {
  display: -webkit-flex;
  display:         flex;
}

.fontFace(@font, @weight, @style: normal){
  @font-face{
    font-family: @font;
    src:url('../../webfonts/@{font}@{weight}.eot');
    src:url('../../webfonts/@{font}@{weight}.eot?#iefix') format('embedded-opentype'),
        url('../../webfonts/@{font}@{weight}.woff') format('woff'),
        url('../../webfonts/@{font}@{weight}.ttf') format('truetype'),
        url('../../webfonts/@{font}@{weight}.svg#icon') format('svg');
    font-weight: @weight;
    font-style: @style;
  }
}

@import "mixins/transforms.less";
@import "mixins/skins.less";
@import "mixins/buttons.less";
@import "mixins/animations.less";
