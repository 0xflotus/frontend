Welcome to the Circle application. The frontend - contained in this directory - is a fairly standard rails app, with notable non-standard things being JRuby and mongodb. The backend is a standard clojure app, and is in the backend/ directory




# Communicating between the frontend and the backend.


## Via the database

Both the frontend and the backend use the same mongodb database. If at all possible, they should use the database to communicate.


## In process

The frontend and backend both run in the same JVM, in the same process. For now, we are calling one from the other to simplify prototyping.


### Calling clojure from Ruby

To call Clojure code, we do not need to generate Java classes. Instead, we use JRClj:

    circle = JRClj.new "circle.init"
    circle.init
    circle.run "circle.init/-main"


### Calling Ruby from Clojure

JRuby exposes Ruby classes as Java classes, so we should be able to call them directly using Clojure's builtin Java interface.

## install notes

* install RVM (from website, not ports)
* rvm install jruby
* rvm use jruby
rvm gemset create circle
rvm gemset use circle
rvm --rvmrc --create jruby-1.6.5@circle
bundle install

## testing

rspec spec/