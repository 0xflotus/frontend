Welcome to the Circle application. The frontend - contained in this directory - is a fairly standard
rails app, with notable non-standard things being JRuby and mongodb. The backend is a standard
clojure app, and is also in this directory.

The backend is run in the same process as the frontend. This all works so long as you use RVM.


# Communicating between the frontend and the backend.

- To call clojure from ruby, esp for workers, see lib/Backend.rb
- To call ruby from clojure, see src/Circle/ruby.clj
- Both ends use the same mongodb database. Synchronization occurs in src/circle/db.clj and config/environements/*.rb



## Setting up dependencies.

* install RVM
  $ bash < <(curl -s https://raw.github.com/wayneeseguin/rvm/master/binscripts/rvm-installer) # dont use your package manager.
  $ rvm install jruby
  $ rvm gemset create circle
  $ bundle install
  $ cd CircleCI
    This should activate rvm, and rvm should print a message to that effect)


## Environments and environmental variables

   - set circlehost to 127.0.0.1 in your /etc/hosts
   - set CIRCLE_SWANK=true to connect to your VM via emacs+slime.
     - M-x slime-connect -> 127.0.0.1 -> 4005
     - only accessible from the same box, must ssh to it.


   - Environments are set using RAILS_ENV. Options are:
     - development
       - default
       - runs on circlehost:3000
       - swank runs on port 4005

     - test
       - set by default for rspec
       - swank is on port 4006
       - runs on circlehost:3001
       - To run rspec fast, do:
         $ RAILS_ENV=test CIRCLE_SWANK=true rails console
         - then connect visa swank and run (circle.ruby/rspec)

     - production
       - DANGER: live database. If running on your local machine, be very fucking careful.
       - sits behind the nginx load balancer

     - staging
       - currently has no load balancer
       - should run on staging.circleci.com
